name: Deploy VM

on: [workflow_dispatch, push]

jobs:
  # Import_VM_WS:
  #   runs-on: [self-hosted, windows, x64]
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Deploy ${{ vars.VMNAMEW }} Script
  #     env:
  #       GITHUB_ESXIHOST: ${{ vars.ESXIHOST }}
  #       GITHUB_ESXIUSERNAME: ${{ vars.ESXIUSERNAME }}
  #       GITHUB_ESXIPASSWORD: ${{ vars.ESXIPASSWORD }}
  #       GITHUB_VMNAME: ${{ vars.VMNAMEW }}
  #       GITHUB_VMDATASTORE: ${{ vars.VMDATASTORE }}
  #       GITHUB_FILENAME: ${{ vars.FILENAMEW }}
  #       GITHUB_DISKFORMAT: ${{ vars.DISKFORMAT }}
  #     run: powershell -File Ansible\win\Deploy.ps1

  # Import_VM_LN:
  #   runs-on: [self-hosted, windows, x64]

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2

  #   - name: Deploy ${{ vars.VMNAMEL }} Script
  #     env:
  #       GITHUB_ESXIHOST: ${{ vars.ESXIHOST }}
  #       GITHUB_ESXIUSERNAME: ${{ vars.ESXIUSERNAME }}
  #       GITHUB_ESXIPASSWORD: ${{ vars.ESXIPASSWORD }}
  #       GITHUB_VMNAME: ${{ vars.VMNAMEL }}
  #       GITHUB_VMDATASTORE: ${{ vars.VMDATASTORE }}
  #       GITHUB_FILENAME: ${{ vars.FILENAMEL }}
  #       GITHUB_DISKFORMAT: ${{ vars.DISKFORMAT }}
  #     run: powershell -File Ansible\lin\Deploy.ps1

  Test_VM_WS:
    runs-on: [self-hosted, windows, x64]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Deploy ${{ vars.VMNAMEL }} Script
      env:
        GITHUB_ESXIHOST: ${{ vars.ESXIHOST }}
        GITHUB_ESXIUSERNAME: ${{ vars.ESXIUSERNAME }}
        GITHUB_ESXIPASSWORD: ${{ vars.ESXIPASSWORD }}
        GITHUB_VMNAME: ${{ vars.VMNAMEW }}
        GITHUB_VMDATASTORE: ${{ vars.VMDATASTORE }}
        GITHUB_FILENAME: ${{ vars.FILENAMEW }}
        GITHUB_DISKFORMAT: ${{ vars.DISKFORMAT }}
        GITHUB_DISK: ${{ vars.DISK_W }}
        GITHUB_CPU: ${{ vars.CPU_W }}
        GITHUB_MEMORY: ${{ vars.MEMORY_W }}
      run: powershell -File Ansible\win\Configuration_W.ps1
